on:
  pull_request:

jobs:
  lint:
    name: Python linting
    strategy:
      matrix:
        python-version: ["3.8"]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.0
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ matrix.python-version }}"
        cache: pip
        cache-dependency-path: |
          pyproject.toml
          requirements.txt
    - name: Cache venv
      uses: actions/cache@v3.3.1
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml','requirements.txt') }}
    - name: Cache pre-commit
      uses: actions/cache@v3.3.1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
    - name: Install just
      uses: extractions/setup-just@v1
      with:
        just-version: '1.13.0'
    - name: Create virtual env, install requirements
      shell: sh
      run: |
        pip install virtualenv
        just deps
        . .venv/bin/activate
        echo "PATH=$PATH" >> "$GITHUB_ENV"
    - name: Check commit messages
      shell: sh
      run: cz check --rev-range "refs/remotes/origin/${{ github.base_ref }}..HEAD"
    - name: Check linting, formatting, types
      shell: sh
      run: just check-codestyle
